{"ast":null,"code":"var _jsxFileName = \"/Users/joeljani/3.Personal_Projects/1.Programming/my_gym_app/frontend/src/workouts/WorkoutContainer.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WorkoutWeekTable from \"./WorkoutWeekTable\";\nimport { Row } from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport Container from \"reactstrap/es/Container\";\nimport CurrentWeekPicker from \"./CurrentWeekPicker\";\n\nconst WorkoutContainer = ({\n  serverUrl\n}) => {\n  const workouts = useSelector(state => state.workouts);\n  const currentWeek = useSelector(state => state.currentWeek);\n  const dispatch = useDispatch();\n\n  const fetchWorkouts = () => {\n    dispatch(async dispatch => {\n      const res = await fetch(\"http://192.168.192.65:8080\" + \"/workouts\");\n      const data = await res.json();\n      dispatch({\n        type: \"WORKOUTS_FETCHED\",\n        workouts: data\n      });\n    });\n  };\n\n  useEffect(fetchWorkouts, [serverUrl]);\n\n  const createWorkout = async workout => {\n    const request = new Request(serverUrl + \"/workouts\", {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=utf-8'\n      }),\n      body: JSON.stringify(workout)\n    });\n\n    try {\n      const response = await fetch(request);\n\n      if (!response.ok) {\n        console.log('Status Code: ' + response.status);\n      } else {\n        const newWorkout = await response.json();\n        dispatch({\n          type: \"WORKOUTS_CHANGED\",\n          workouts: workouts.concat(newWorkout)\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getWorkoutsOfCurrentWeek = workouts => {\n    const currentWeekTransformed = currentWeek.map(d => {\n      if (d.getDate() >= 10 && d.getMonth() + 1 < 10) return \"2020-\" + \"0\" + (d.getMonth() + 1) + \"-\" + d.getDate();else if (d.getDate() < 10 && d.getMonth() + 1 < 10) return \"2020-\" + \"0\" + (d.getMonth() + 1) + \"-\" + \"0\" + d.getDate();else if (d.getDate() >= 10 && d.getMonth() + 1 >= 10) return \"2020-\" + (d.getMonth() + 1) + \"-\" + d.getDate();else if (d.getDate() < 10 && d.getMonth() + 1 >= 10) return \"2020-\" + (d.getMonth() + 1) + \"-\" + \"0\" + d.getDate();\n    });\n    return workouts.filter(workout => currentWeekTransformed.includes(workout.date));\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Current week\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CurrentWeekPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(WorkoutWeekTable, {\n    workouts: getWorkoutsOfCurrentWeek(workouts),\n    createWorkout: createWorkout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default WorkoutContainer;","map":{"version":3,"sources":["/Users/joeljani/3.Personal_Projects/1.Programming/my_gym_app/frontend/src/workouts/WorkoutContainer.js"],"names":["React","useEffect","useSelector","useDispatch","WorkoutWeekTable","Row","Col","Container","CurrentWeekPicker","WorkoutContainer","serverUrl","workouts","state","currentWeek","dispatch","fetchWorkouts","res","fetch","data","json","type","createWorkout","workout","request","Request","method","headers","Headers","body","JSON","stringify","response","ok","console","log","status","newWorkout","concat","error","getWorkoutsOfCurrentWeek","currentWeekTransformed","map","d","getDate","getMonth","filter","includes","date"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport WorkoutWeekTable from \"./WorkoutWeekTable\";\nimport {Row} from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport Container from \"reactstrap/es/Container\";\nimport CurrentWeekPicker from \"./CurrentWeekPicker\";\n\n\nconst WorkoutContainer = ({serverUrl}) => {\n\n    const workouts = useSelector(state => state.workouts);\n    const currentWeek = useSelector(state => state.currentWeek)\n    const dispatch = useDispatch();\n\n    const fetchWorkouts = () => {\n        dispatch(\n            async dispatch => {\n                const res = await fetch(\"http://192.168.192.65:8080\" + \"/workouts\");\n                const data = await res.json();\n                dispatch({type: \"WORKOUTS_FETCHED\", workouts: data});\n            }\n        );\n    };\n    useEffect(fetchWorkouts, [serverUrl]);\n\n    const createWorkout = async workout => {\n        const request = new Request(serverUrl + \"/workouts\", {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json; charset=utf-8'\n            }),\n            body: JSON.stringify(workout)\n        });\n        try {\n            const response = await fetch(request);\n            if (!response.ok) {\n                console.log('Status Code: ' + response.status);\n            } else {\n                const newWorkout = await response.json();\n                dispatch({type: \"WORKOUTS_CHANGED\", workouts: workouts.concat(newWorkout)})\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const getWorkoutsOfCurrentWeek = (workouts) => {\n        const currentWeekTransformed = currentWeek.map(d => {\n            if(d.getDate() >= 10 && d.getMonth()+1 < 10) return \"2020-\"+\"0\" + (d.getMonth()+1) + \"-\" + d.getDate()\n            else if(d.getDate() < 10 && d.getMonth()+1 < 10) return \"2020-\"+\"0\" + (d.getMonth()+1) + \"-\" + \"0\" + d.getDate()\n            else if(d.getDate() >= 10 && d.getMonth()+1 >= 10) return  \"2020-\"+ (d.getMonth()+1) + \"-\" + d.getDate()\n            else if(d.getDate() < 10 && d.getMonth()+1 >= 10) return \"2020-\"+ (d.getMonth()+1) + \"-\" + \"0\" + d.getDate()\n        })\n        return workouts.filter(workout => currentWeekTransformed.includes(workout.date))\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col><h3>Current week</h3></Col>\n            </Row>\n            <Row>\n                <Col><CurrentWeekPicker/></Col>\n            </Row>\n            <WorkoutWeekTable workouts={getWorkoutsOfCurrentWeek(workouts)} createWorkout={createWorkout}/>\n        </Container>\n    )\n\n\n}\n\nexport default WorkoutContainer;\n"]},"metadata":{},"sourceType":"module"}