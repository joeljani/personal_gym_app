{"ast":null,"code":"var _jsxFileName = \"/Users/joeljani/3.Personal_Projects/1.Programming/my_gym_app/frontend/src/workouts/WorkoutContainer.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WorkoutWeekTable from \"./WorkoutWeekTable\";\nimport { Row } from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport Container from \"reactstrap/es/Container\";\nimport CurrentWeekPicker from \"./CurrentWeekPicker\";\n\nconst WorkoutContainer = ({\n  serverUrl\n}) => {\n  const workouts = useSelector(state => state.workouts);\n  const currentWeek = useSelector(state => state.currentWeek);\n  const dispatch = useDispatch();\n\n  const fetchWorkouts = () => {\n    dispatch(async dispatch => {\n      const res = await fetch(serverUrl + \"/workouts\");\n      const data = await res.json();\n      dispatch({\n        type: \"WORKOUTS_FETCHED\",\n        workouts: data\n      });\n    });\n  };\n\n  useEffect(fetchWorkouts, [serverUrl]);\n\n  const getWorkoutsOfCurrentWeek = workouts => {\n    const currentWeekTransformed = currentWeek.map(d => {\n      if (d.getDate() >= 10 && d.getMonth() + 1 < 10) return \"2020-\" + \"0\" + (d.getMonth() + 1) + \"-\" + d.getDate();else if (d.getDate() < 10 && d.getMonth() + 1 < 10) return \"2020-\" + \"0\" + (d.getMonth() + 1) + \"-\" + \"0\" + d.getDate();else if (d.getDate() >= 10 && d.getMonth() + 1 >= 10) return \"2020-\" + (d.getMonth() + 1) + \"-\" + d.getDate();else if (d.getDate() < 10 && d.getMonth() + 1 >= 10) return \"2020-\" + (d.getMonth() + 1) + \"-\" + \"0\" + d.getDate();\n    });\n    return workouts.filter(workout => currentWeekTransformed.includes(workout.date));\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Header\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CurrentWeekPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(WorkoutWeekTable, {\n    workouts: getWorkoutsOfCurrentWeek(workouts),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default WorkoutContainer;","map":{"version":3,"sources":["/Users/joeljani/3.Personal_Projects/1.Programming/my_gym_app/frontend/src/workouts/WorkoutContainer.js"],"names":["React","useEffect","useSelector","useDispatch","WorkoutWeekTable","Row","Col","Container","CurrentWeekPicker","WorkoutContainer","serverUrl","workouts","state","currentWeek","dispatch","fetchWorkouts","res","fetch","data","json","type","getWorkoutsOfCurrentWeek","currentWeekTransformed","map","d","getDate","getMonth","filter","workout","includes","date"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport WorkoutWeekTable from \"./WorkoutWeekTable\";\nimport {Row} from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport Container from \"reactstrap/es/Container\";\nimport CurrentWeekPicker from \"./CurrentWeekPicker\";\n\n\nconst WorkoutContainer = ({serverUrl}) => {\n\n    const workouts = useSelector(state => state.workouts);\n    const currentWeek = useSelector(state => state.currentWeek)\n    const dispatch = useDispatch();\n\n    const fetchWorkouts = () => {\n        dispatch(\n            async dispatch => {\n                const res = await fetch(serverUrl + \"/workouts\");\n                const data = await res.json();\n                dispatch({type: \"WORKOUTS_FETCHED\", workouts: data});\n            }\n        );\n    };\n    useEffect(fetchWorkouts, [serverUrl]);\n\n    const getWorkoutsOfCurrentWeek = (workouts) => {\n        const currentWeekTransformed = currentWeek.map(d => {\n            if(d.getDate() >= 10 && d.getMonth()+1 < 10) return \"2020-\"+\"0\" + (d.getMonth()+1) + \"-\" + d.getDate()\n            else if(d.getDate() < 10 && d.getMonth()+1 < 10) return \"2020-\"+\"0\" + (d.getMonth()+1) + \"-\" + \"0\" + d.getDate()\n            else if(d.getDate() >= 10 && d.getMonth()+1 >= 10) return  \"2020-\"+ (d.getMonth()+1) + \"-\" + d.getDate()\n            else if(d.getDate() < 10 && d.getMonth()+1 >= 10) return \"2020-\"+ (d.getMonth()+1) + \"-\" + \"0\" + d.getDate()\n        })\n        return workouts.filter(workout => currentWeekTransformed.includes(workout.date))\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col><h1>Header</h1></Col>\n            </Row>\n            <Row>\n                <Col><CurrentWeekPicker/></Col>\n            </Row>\n            <WorkoutWeekTable workouts={getWorkoutsOfCurrentWeek(workouts)}/>\n        </Container>\n    )\n\n\n}\n\nexport default WorkoutContainer;\n"]},"metadata":{},"sourceType":"module"}