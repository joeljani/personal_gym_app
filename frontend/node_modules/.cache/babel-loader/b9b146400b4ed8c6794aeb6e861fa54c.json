{"ast":null,"code":"var _jsxFileName = \"/Users/joeljani/3.Personal_Projects/1.Programming/my_gym_app/frontend/src/workouts/CurrentWeek.js\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport DayPicker from \"react-day-picker\";\nimport 'react-day-picker/lib/style.css';\nimport moment from \"moment\";\n\nconst CurrentWeek = () => {\n  const [hoverRange, setHoverRange] = useState(undefined);\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const handleDayChange = date => {\n    setSelectedDays(getWeekDays(getWeekRange(date).from));\n  };\n\n  const handleDayEnter = date => {\n    setHoverRange(getWeekRange(date));\n  };\n\n  const handleDayLeave = () => {\n    setHoverRange(undefined);\n  };\n\n  const handleWeekClick = (weekNumber, days, e) => {\n    setSelectedDays(days);\n  };\n\n  const daysAreSelected = selectedDays.length > 0;\n  const modifiers = {\n    hoverRange,\n    selectedRange: daysAreSelected && {\n      from: selectedDays[0],\n      to: selectedDays[6]\n    },\n    hoverRangeStart: hoverRange && hoverRange.from,\n    hoverRangeEnd: hoverRange && hoverRange.to,\n    selectedRangeStart: daysAreSelected && selectedDays[0],\n    selectedRangeEnd: daysAreSelected && selectedDays[6]\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Choose week\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Select a week\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DayPicker, {\n    selectedDays: selectedDays,\n    showWeekNumbers: true,\n    showOutsideDays: true,\n    modifiers: modifiers,\n    onDayClick: handleDayChange,\n    onDayMouseEnter: handleDayEnter,\n    onDayMouseLeave: handleDayLeave,\n    onWeekClick: handleWeekClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nfunction getWeekDays(weekStart) {\n  const days = [weekStart];\n\n  for (let i = 1; i < 7; i += 1) {\n    days.push(moment(weekStart).add(i, 'days').toDate());\n  }\n\n  return days;\n}\n\nfunction getWeekRange(date) {\n  return {\n    from: moment(date).startOf('week').toDate(),\n    to: moment(date).endOf('week').toDate()\n  };\n}\n\nexport default CurrentWeek;","map":{"version":3,"sources":["/Users/joeljani/3.Personal_Projects/1.Programming/my_gym_app/frontend/src/workouts/CurrentWeek.js"],"names":["React","useState","Button","Modal","ModalBody","ModalHeader","DayPicker","moment","CurrentWeek","hoverRange","setHoverRange","undefined","selectedDays","setSelectedDays","modal","setModal","toggle","handleDayChange","date","getWeekDays","getWeekRange","from","handleDayEnter","handleDayLeave","handleWeekClick","weekNumber","days","e","daysAreSelected","length","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","weekStart","i","push","add","toDate","startOf","endOf"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Modal, ModalBody, ModalHeader} from \"reactstrap\";\nimport DayPicker from \"react-day-picker\";\nimport 'react-day-picker/lib/style.css';\nimport moment from \"moment\";\n\n\nconst CurrentWeek = () => {\n\n    const [hoverRange, setHoverRange] = useState(undefined)\n    const [selectedDays, setSelectedDays] = useState([])\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n\n    const handleDayChange = date => {\n        setSelectedDays(getWeekDays(getWeekRange(date).from))\n    };\n\n    const handleDayEnter = date => {\n        setHoverRange(getWeekRange(date))\n    };\n\n    const handleDayLeave = () => {\n        setHoverRange(undefined)\n    };\n\n    const handleWeekClick = (weekNumber, days, e) => {\n        setSelectedDays(days)\n    };\n\n    const daysAreSelected = selectedDays.length > 0;\n\n    const modifiers = {\n        hoverRange,\n        selectedRange: daysAreSelected && {\n            from: selectedDays[0],\n            to: selectedDays[6],\n        },\n        hoverRangeStart: hoverRange && hoverRange.from,\n        hoverRangeEnd: hoverRange && hoverRange.to,\n        selectedRangeStart: daysAreSelected && selectedDays[0],\n        selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n\n\n    return (\n        <div>\n            <Button onClick={toggle}>Choose week</Button>\n            <Modal isOpen={modal} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Select a week</ModalHeader>\n                <ModalBody>\n                    <DayPicker selectedDays={selectedDays}\n                               showWeekNumbers\n                               showOutsideDays\n                               modifiers={modifiers}\n                               onDayClick={handleDayChange}\n                               onDayMouseEnter={handleDayEnter}\n                               onDayMouseLeave={handleDayLeave}\n                               onWeekClick={handleWeekClick}/>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nfunction getWeekDays(weekStart) {\n    const days = [weekStart];\n    for (let i = 1; i < 7; i += 1) {\n        days.push(\n            moment(weekStart)\n                .add(i, 'days')\n                .toDate()\n        );\n    }\n    return days;\n}\n\nfunction getWeekRange(date) {\n    return {\n        from: moment(date)\n            .startOf('week')\n            .toDate(),\n        to: moment(date)\n            .endOf('week')\n            .toDate(),\n    };\n}\n\nexport default CurrentWeek;\n"]},"metadata":{},"sourceType":"module"}